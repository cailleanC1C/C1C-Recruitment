name: 10-auto-Deploy to Render (queued, same-file supersedes)

on:
  push:
    branches: [ main ]
    paths:
      - "app.py"
      - "shared/**"
      - "modules/**"
      - "config/**"
      - "scripts/**"
      - "requirements*.txt"
      - "pyproject.toml"
      - "poetry.lock"
      - "Dockerfile"
      - ".dockerignore"
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: false
    steps:
      - name: Checkout (shallow)
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Compute changed files for this commit
        id: changed
        run: |
          git fetch --no-tags --depth=2 origin ${{ github.ref }}
          BASE_SHA=$(git rev-parse HEAD^ || echo "")
          if [ -z "$BASE_SHA" ]; then
            echo "files=[]" >> $GITHUB_OUTPUT
          else
            FILES=$(git diff --name-only "$BASE_SHA" HEAD | sed 's/"/\\"/g' | awk '{printf "%s\"%s\"", (NR>1?",":""), $0}')
            echo "files=[$FILES]" >> $GITHUB_OUTPUT
          fi

      - name: Skip if superseded for same files
        uses: actions/github-script@v7
        id: superseded
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const branch = context.ref.replace('refs/heads/','');
            const { owner, repo } = context.repo;
            const files = JSON.parse(core.getInput('files', { required: true }));
            if (!files.length) {
              core.setOutput('skip', 'false');
              return;
            }
            const head = await github.rest.repos.getBranch({ owner, repo, branch });
            const latestSha = head.data.commit.sha;
            const currentSha = context.sha;
            if (latestSha === currentSha) {
              core.setOutput('skip', 'false');
              return;
            }
            const cmp = await github.rest.repos.compareCommits({
              owner,
              repo,
              base: currentSha,
              head: latestSha,
              per_page: 100
            });
            const newerFiles = new Set((cmp.data.files || []).map(f => f.filename));
            const touchesSame = files.some(f => newerFiles.has(f));
            core.setOutput('skip', touchesSame ? 'true' : 'false');
          files: ${{ steps.changed.outputs.files }}

      - name: Exit early (superseded for same files)
        if: steps.superseded.outputs.skip == 'true'
        run: |
          echo "A newer commit on this branch modified at least one of the same files changed in this run; skipping deploy."
          exit 0

      # === Build & Deploy (unchanged logic below) ===
      - name: Trigger Render deploy
        env:
          HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
        run: curl -fsS -X POST "$HOOK"
